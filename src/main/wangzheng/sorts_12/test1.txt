mergeSort(int[] a,int n){
    mergeSortInternally(a,0,n-1)
}

mergeSortInternally(int[] a, int p, int r){
    if(p>=r)return;

    int q = p + (r-p)/2;

    mergeSortInternally(a, p,q);
    mergeSortInternally(a, q+1,r);

    merge(a, p,q,r);
}

merge(int[] a,int p, int q, int r){
    int i = p;
    int j = q+1;
    int k = 0;
    int[] tmp = new int[r-p+1];

    while(i<=q && j<=r){
        if(a[i]<a[j]){
            tmp[k] = a[i]
            i++;
            k++;
        }else{
            tmp[k] = a[j]
            j++;
            k++;
        }
    }

    int start = i,end = q;
    if(j<=r){
        start = j;
        end = r;
    }

    if(start <=end){
        tmp[k++] = a[start++]
    }

    for(i=0;i<=k;i++){
        a[p+i] = tmp[i]
    }
}